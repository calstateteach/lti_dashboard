doctype html
html(lang='en')
 head
   title CAM User Search
   link(rel="stylesheet", href=APP_URL + "LatoLatin/latolatinfonts.css")
   link(rel="stylesheet", href=APP_URL + "style.css")
   STYLE.
    PRE {
      padding:10px;
    }
body
  p
    A(HREF="./home") Home
  H1 Test Authorization Token
  DIV
    LABEL(FOR="email") Email:
    INPUT(TYPE="text" ID="email" VALUE="teststudent@calstateteach.net" STYLE="width:300px;margin:6px;")
    BUTTON(ID="btnSubmit" ONCLICK="createToken()") Create token
  PRE(ID="destination")

  //- Stash data for browser scripts
  DIV(ID="appLocation" STYLE="display:none")=APP_URL

  HR
  DIV(STYLE="margin-top:50px")
    LABEL(FOR="postEmail") Email:
    INPUT(TYPE="text" ID="postEmail" VALUE="teststudent@calstateteach.net" STYLE="width:300px;margin:6px;")
  DIV
    LABEL(FOR="postUrl") URL:
    INPUT(TYPE="text" ID="postUrl" VALUE=url STYLE="width:400px;margin:6px;")
    BUTTON(ID="btnPostSubmit" ONCLICK="postToken()") POST token
  PRE(ID="postFeedback")

  //- Dummy form to use to post to endpoint.
  <div style="display:none">
    <form action="authorize" method="post" id="authForm" target="_BLANK">
      <input type="hidden" id="jwt" name="jwt">
      <input type="submit" value="Submit">
    </form>
  </div>

  script.

    function createToken() {
      const appLocation = document.getElementById('appLocation').innerText;
      const email = document.getElementById('email').value;
      const destSpan = document.getElementById('destination');
      const btn =  document.getElementById('btnSubmit');

      // Paramater validation
      if (!email) {
        destSpan.innerText = 'Enter user email to use as subject of the authorization token.';
        return false;
      }

      const ajaxEndpoint = appLocation + 'api/v0/auth/login/' + email;
  
      var httpRequest = new XMLHttpRequest();
      if (!httpRequest) {
        alert('Giving up :( Cannot create an XMLHTTP instance');
        done();
        return false;
      }

      btn.disabled = true;   // Don't let user do multiple lookups at once.
      
      httpRequest.onreadystatechange = lookupHandler;
      httpRequest.open('GET', ajaxEndpoint, true);
      httpRequest.send();

      function lookupHandler() {
        if (httpRequest.readyState === XMLHttpRequest.DONE) {
          if (httpRequest.status === 200) {
            destSpan.innerText = httpRequest.responseText;
          } else {
            destSpan.innerText = 'AJAX error status:' + httpRequest.status;
          }
          btn.disabled = false; // Let user try another test
        } // end request done
      } // end request handler
    } // end function


    // 02.28.2019 tps Get an auth token from API & use it in POST to external Website.
    function postToken() {
      const appLocation = document.getElementById('appLocation').innerText;
      const email = document.getElementById('postEmail').value;
      const url = document.getElementById('postUrl').value;
      const destSpan = document.getElementById('postFeedback');
      const btn =  document.getElementById('btnPostSubmit');

      // Paramater validation
      if (!email) {
        destSpan.innerText = 'Enter user email to use as subject of the authorization token.';
        return false;
      }
      if (!url) {
        destSpan.innerText = 'Enter URL to use as target of the POST.';
        return false;
      }

      const ajaxEndpoint = appLocation + 'api/v0/auth/login/' + email;
  
      var httpRequest = new XMLHttpRequest();
      if (!httpRequest) {
        alert('Giving up :( Cannot create an XMLHTTP instance');
        done();
        return false;
      }

      btn.disabled = true;   // Don't let user do multiple lookups at once.
      
      httpRequest.onreadystatechange = lookupHandler;
      httpRequest.open('GET', ajaxEndpoint, true);
      httpRequest.send();

      function lookupHandler() {
        if (httpRequest.readyState === XMLHttpRequest.DONE) {
          if (httpRequest.status === 200) {

            // Use the token to redirect user somewhere else
            var authForm = document.getElementById('authForm');
            authForm.action = url;
            var authField = document.getElementById('jwt');
            authField.value = httpRequest.responseText;
            //- var authForm = document.getElementById('authForm');
            authForm.submit();

          } else {
            destSpan.innerText = 'AJAX error status:' + httpRequest.status;
          }
          btn.disabled = false; // Let user try another test
        } // end request done
      } // end request handler
    } // end function


    function initPage() {
      // Implement [Enter] for submit form text fields.
      const txtEmail = document.getElementById('email');
      const btnSubmit =  document.getElementById('btnSubmit');

      function onEnterSubmit(event) {
        if (event.keyCode === 13) {
          btnSubmit.focus();
          btnSubmit.click();
        }
      }

      txtEmail.addEventListener('keyup', onEnterSubmit);

      // Implement [Enter] for POST submit form:
      const txtPostEmail = document.getElementById('postEmail');
      const txtUrl = document.getElementById('postUrl');
      const btnPostSubmit =  document.getElementById('btnPostSubmit');

      function onEnterPostSubmit(event) {
        if (event.keyCode === 13) {
          btnPostSubmit.focus();
          btnPostSubmit.click();
        }
      }
      
      txtPostEmail.addEventListener('keyup', onEnterPostSubmit);
      txtUrl.addEventListener('keyup', onEnterPostSubmit);
    }

    // Wait for DOM to load before tinkering with form behavior
    document.addEventListener("DOMContentLoaded", initPage);


    