doctype html
html(lang='en')
  head
    title= (tcUser ? "Teacher Candidate" : "Faculty") + " Observations Dashboard"
    link(rel="stylesheet", href=APP_URL + "LatoLatin/latolatinfonts.css")
    link(rel="stylesheet", href=APP_URL + "style.css")
    link(rel="stylesheet", href=APP_URL + "style_dash_scroll.css")
    link(rel="stylesheet", href=APP_URL + "style_module_submissions.css")
    link(rel="stylesheet", href=APP_URL + "obs.css")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
  body
    block body
      //- Top level navigation links
      P
        if userRoles.includes('dev')
          A(HREF=APP_URL + "dev/home") Home
          | &nbsp; | &nbsp;
          if tcUser
            A(HREF=APP_URL + "dev/tcObservationsLinks") Teacher Candidates List
          else 
            A(HREF=APP_URL + "dev/obsFacultyList") Faculty List
          | &nbsp; | &nbsp;
          A(HREF=APP_URL + "dev/cstAdminList?destination=observations") CST-Admin List
          | &nbsp; | &nbsp;

        if userRoles.includes('CST-Admin')
          A(HREF=APP_URL + "dash/cstAdmin?destination=observations") Campus Faculty List
          | &nbsp; | &nbsp; 

        //- Provide link to corresonding modules dashboard
        if tcUser 
          A(HREF=APP_URL + "dash/tc/" + user.id + '/mod') Modules Dashboard
        else
          A(HREF=APP_URL + "dash/faculty/" + user.id ) Modules Dashboard
  
      H1= 'Observations Dashboard for ' + user.name

      //- Top level is loop through semesters
      each semester in semesters
        - var userTerms = semester.term_courses

        if semester.isupe_assignment_style === 'standard'

          //-------------------------------- Standard term assignments layout --------------------------
          each term in userTerms
            //- H2= term.name
            H2(STYLE="text-transform: capitalize")= semester.year + ' ' + semester.season + ', ' + term.name
            DIV
              //---------- Fixed table columns
              DIV(CLASS="fixed_left")
                TABLE(ClASS="obs_table")
                  THEAD
                    TR
                      TH
                        if tcUser
                          DIV Faculty
                        else 
                          DIV Teacher
                          DIV Candidates
                    TR
                  TBODY
                    each student in term.students
                      TR
                        TD(CLASS="obs_student_col")
                          DIV
                            if tcUser
                              if (term.faculty)
                                =term.faculty.user.name
                            else
                              A(HREF= CST_CANVAS_BASE_URL + 'courses/' + term.course_id + '/grades/' + student.id + '#tab-assignments' TARGET="_BLANK")= student.name

              //---------- Scrolling table columns
              //- Client-side JS creates & fills in data columns containing assignments
              if term.assignments.length > 0
                DIV(CLASS="scrolling_right")
                  TABLE(ClASS="obs_table"  ID="term_" + term.course_id)
                    THEAD
                      TR
                        each assignment in term.assignments
                          TH
                            DIV(CLASS="obs_table_header")
                              if tcUser
                                = assignment.name
                              else
                                A(HREF=assignment.html_url TARGET="_blank")= assignment.name
                    TBODY
                      each student in term.students
                        TR
                          each assignment in term.assignments
                            TD(ID= `crs_${term.course_id}_sec_${student.iSupe_course_section_id}_ass_${assignment.id}_stu_${student.id}`) ----
              else
                //- 09.17.2019 tps An iSupervision course or assignments might be missing
                DIV(CLASS="scrolling_right")
                  TABLE(ClASS="obs_table"  ID="term_" + term.course_id)
                    THEAD
                      TR
                        TH
                          DIV(CLASS="obs_table_header") ----
                    TBODY
                      TR
                        TD ----
        else
          //-------------------------------- Overrides term assignments layout --------------------------
          each term in userTerms
            H2(STYLE="text-transform: capitalize")= semester.year + ' ' + semester.season + ', ' + term.name
            DIV
              //---------- Fixed table columns
              DIV(CLASS="fixed_left")
                TABLE(ClASS="obs_table")
                  THEAD
                    TR
                      TH
                        if tcUser
                          DIV Faculty
                        else 
                          DIV Teacher
                          DIV Candidates
                    TR
                  TBODY
                    each student in term.students
                      TR
                        //- TD(CLASS="obs_student_col")
                        TD(CLASS="obs_student_col_ass_overrides")
                          DIV
                            if tcUser
                              if (term.faculty)
                                =term.faculty.user.name
                            else
                              A(HREF= CST_CANVAS_BASE_URL + 'courses/' + term.course_id + '/grades/' + student.id + '#tab-assignments' TARGET="_BLANK")= student.name

              //---------- Scrolling table columns
              //- Client-side JS creates & fills in data columns
              DIV(CLASS="scrolling_right")
                TABLE(ClASS="obs_table"  ID="term_" + term.course_id)
                  THEAD
                    TR
                      TH
                        DIV Observation Assignments
                        DIV(CLASS="show-all-control")
                          -var chkId = 'chkShowAll_' + term.course_id
                          INPUT(ID=chkId TYPE="checkbox" onclick=`toggleShowAll(${term.course_id}, this.checked)`)
                          LABEL(FOR=chkId) Show all
                      TH Final Status
                  TBODY
                    each student in term.students
                      TR
                        if tcUser
                          TD ----
                        else 
                          TD
                            BUTTON(onclick=`showAddForm(${term.course_id}, "CritiqueIt", ${student.id})` disabled=!student.iSupe_course_section_id) iSupervision
                        TD(ID=`crs_${term.course_id}_sec_${student.iSupe_course_section_id}_stu_${student.id}_final` CLASS="ass_overrides") ----
    
      if !tcUser
        P Use <span style="font-weight: bold">SpeedGrader</span> to review teacher candidate work.
    
      //- 12.27.2019 tps Restore explanation of recent submission & faculty comments icons
      P 
        IMG(SRC=APP_URL + "mod-icons/box-asterisk.png" CLASS="recent_submission_img")
        |  = Submission made within the last 48 hours
      P
        IMG(SRC=APP_URL + "obs-icons/comments-icon-24.png" CLASS="recent_submission_img")
        |  = Faculty has made comments
        
      //- Display icons key only if we're also displaying semesters with assignment overrides
      if semesters.find( e => e.isupe_assignment_style === "overrides")
        DIV
          IMG(SRC=APP_URL + "obs-icons/key.png" CLASS="icons-key")
      
      //- Modal add assignment form
      DIV(id="addAssDiv", class="modal")
        FORM(class="modal-content animate" onSubmit="return false;" id="addAssForm")
          //- SPAN(onclick="document.getElementById('addAssDiv').style.display='none'"
          SPAN(onclick="cancelAdd()"
            class="close"
            title="Close Modal") &times;
          DIV(class="container")
            LABEL(ID='lblAdd') Add assignment with name:
            INPUT(type='text'
              name='assignmentName'
              id='assignmentName'
              required)
            INPUT(type='hidden' id='studentId' name='studentId' value='')
            INPUT(type='hidden' id='courseId' name='courseId' value='')
            INPUT(type='hidden' id='sectionId' name='sectionId' value='')
            INPUT(type='hidden' id='addType' name='addType' value='')
            BUTTON(type='submit' id='btnSubmit' onclick="submitAdd()") Submit
            | &nbsp; &nbsp;
            //- BUTTON(type='button' onclick="document.getElementById('addAssDiv').style.display='none'" class="cancelBtn" id='btnCancel') Cancel
            BUTTON(type='button' onclick="cancelAdd()" class="cancelBtn" id='btnCancel') Cancel
            | &nbsp; &nbsp;
            //- SPAN(id="waitMsg" class="errMsg" style="visibility:hidden") Adding new assignment... 
            SPAN(id="waitMsg" class="errMsg" style="display:none") Adding new assignment... 
              IMG(SRC=APP_URL + "spinner_small.gif")
            SPAN(id="errMsg" class="errMsg" style="display:none")
              
      //- Modal Edit assignment form
      DIV(id="editAssDiv", class="modal")
        FORM(class="modal-content animate" onSubmit="return false;" id="addEditForm")
          SPAN(onclick="cancelEdit()"
            class="close"
            title="Close Modal") &times;
          DIV(class="container")
            H3(id='editCurrentAssignmentName')
            LABEL Rename assignment:
            INPUT(type='text'
              name='editNewAssignmentName'
              id='editNewAssignmentName'
              required)
            INPUT(type='hidden' id='editCourseId' name='editCourseId' value='')
            INPUT(type='hidden' id='editAssignmentId' name='editAssignmentId' value='')
            BUTTON(type='submit' id='btnEditSubmit' onclick="submitEdit()") Submit
            | &nbsp; &nbsp;
            BUTTON(type='button' onclick="cancelEdit()" class="cancelBtn" id='btnEditCancel') Cancel
            | &nbsp; &nbsp;
            SPAN(id="editWaitMsg" class="errMsg" style="display:none") Updating assignment... 
              IMG(SRC=APP_URL + "spinner_small.gif")
            SPAN(id="editErrMsg" class="errMsg" style="display:none")      //- Place to log request errors
      DIV(ID="divStatus" STYLE="margin-top: 50px; color:red")


      //- Modal Google Doc form 
      DIV(id="createGDocDiv", class="modal")
        FORM(class="modal-content animate" onSubmit="return false;" id="createGDocForm")
          SPAN(onclick="cancelCreateGDoc()"
            class="close"
            title="Close Modal") &times;
          DIV(class="container")
            H3 Create Google Doc
            LABEL Google Doc name:
            INPUT(type='text'
              name='createGDocName'
              id='createGDocName'
              required)
            INPUT(type='hidden' id='createGDocCourseId' name='createGDocCourseId' value='')
            INPUT(type='hidden' id='createGDocAssignmentId' name='createGDocAssignmentId' value='')
            INPUT(type='hidden' id='createGDocAssJson' name='createGDocAssJson' value='')
            INPUT(type='hidden' id='createGDocCandidateName' name='createGDocCandidateName' value='')
            BUTTON(type='submit' id='btnCreateGDocSubmit' onclick="submitCreateGDoc()") Submit
            | &nbsp; &nbsp;
            BUTTON(type='button' id='btnCreateGDocCancel' onclick="cancelCreateGDoc()" class="cancelBtn") Cancel
            | &nbsp; &nbsp;
            SPAN(id="createGDocWaitMsg" class="errMsg" style="display:none") Creating Google Doc... 
              IMG(SRC=APP_URL + "spinner_small.gif")
            SPAN(id="createGDocErrMsg" class="errMsg" style="display:none")

      //- Modal Google Doc merge result form 
      DIV(id="createGDocResultDiv", class="modal")
        FORM(class="modal-content animate" onSubmit="return false;" id="createGDocResultForm")
          SPAN(onclick="cancelCreateGDocResult()"
            class="close"
            title="Close Modal") &times;
          DIV(class="container")
            H3(ID='createGDocResultText')            
            DIV
              LABEL Document link:
            DIV
              A(ID='createGDocResultLink' TARGET="_blank" onclick="cancelCreateGDocResult();" STYLE="overflow-wrap: break-word;") Web link goes here
            DIV(STYLE='text-align:center; margin-top:12px;')
              BUTTON(type='button' id='btnCreateGDocResultCancel' onclick="cancelCreateGDocResult()" class="cancelBtn") OK

      //- Modal Google Doc Duplicate Name Form 
      DIV(id="dupeGDocDiv", class="modal")
        FORM(class="modal-content animate" onSubmit="return false;" id="dupeGDocForm")
          SPAN(ID="dupeGDocCross"
            class="close"
            title="Close Modal") &times;
          DIV(class="container")
            H3 Duplicate Google Doc Name
            P There is already a Google Doc with the name:
            P(ID='dupeGDocNameExists' STYLE="font-style: italic;") duplicate document name
            P Try creating the Google Doc with this name instead?
            P(ID='dupeGDocNameSuggested' STYLE="font-style: italic;") suggested name
            BUTTON(type='submit' id='btnDupeGDocSubmit' onclick="submitDupeGDoc()") Yes
            | &nbsp; &nbsp;
            BUTTON(type='button' id='btnDupeGDocCancel' onclick="cancelDupeGDoc()" class="cancelBtn") No, let me edit the doc name
            | &nbsp; &nbsp;

      //- Modal form for unexpected error. There's nothing the user can do for these errors. 
      DIV(id="errDialogDiv", class="modal")
        FORM(class="modal-content animate" onSubmit="return false;" id="errDialogForm")
          SPAN(ID="errDialogCross"
            class="close"
            title="Close Modal") &times;
          DIV(class="container")
            H3 Error
            LABEL(FOR="errDialogTextContent") Unable to complete your request due to an unexpected error:
            TEXTAREA(STYLE="width:95%;" rows='8' name='errDialogTextContent' id='errDialogTextContent' readonly) error message
            BUTTON(type='submit' id='btnErrDialogSubmit') OK


      //- Debug stuff
      if isDevModeOn
        DIV(STYLE="margin-top:100px")
          TABLE(CLASS='data')
            TR
              TH Property
              TH Value
            TR
              TD userRoles
              TD= userRoles
            TR
              TD semesters
              TD
                PRE= JSON.stringify(semesters, null, 2)
            TR
              TD user
              TD
                PRE= JSON.stringify(user, null, 2)
          
          //- Display session data for developers
          H2 Sever Session
          TABLE(CLASS='data')
            each val, key in sessionData
              tr
                td(style="font-weight: bold;")= key + ":"
                if typeof val === 'object'
                  td
                    PRE= JSON.stringify(val, null, 2)
                else
                  td= val
      DIV(ID=divStatus)

      //- Stash data for browser scripts
      //- DIV(ID="userTerms" STYLE="display:none")!=JSON.stringify(userTerms)
      DIV(ID="semesters" STYLE="display:none")!=JSON.stringify(semesters)
      DIV(ID="facultyUser" STYLE="display:none")!=JSON.stringify(user)
      DIV(ID="appLocation" STYLE="display:none")=APP_URL
      DIV(ID="canvasBaseUrl" STYLE="display:none")=CST_CANVAS_BASE_URL

      //- Tell browser script that this is a teacher candidate page
      if tcUser
        DIV(ID="tcUser" STYLE="display:none") tcUser


      SCRIPT(SRC=APP_URL + "js/obs.js")
      SCRIPT(SRC=APP_URL + "js/obsOverrides.js")
